jobs:

- name: update-test-users-dev
  serial: true
  plan:
  - get: src
    params: {depth: 1}
  - get: master-bosh-root-cert
  - get: general-task
  - get: weekly
    trigger: true
  - task: update-test-user-credentials
    image: general-task
    config:
      inputs:
        - name: src
        - name: master-bosh-root-cert
      platform: linux
      run:
        path: src/ci/update-test-user-passwords.sh
      params:
        BOSH_DIRECTOR_NAME: development
        UAA_API_URL: ((uaa-url-development))
        UAA_CLIENT_ID: ((uaa-client-id-development))
        UAA_CLIENT_SECRET: ((uaa-client-secret-development))
        TEST_USERS_CREDENTIAL_USERNAME_MAP: ((dev-test-users-credential-username-map))
        CREDHUB_CA_CERT: master-bosh-root-cert/((master-bosh-cert-file))
        CREDHUB_CLIENT: ((opensearch-proxy-ci-credhub-client-id))
        CREDHUB_SECRET: ((opensearch-proxy-ci-credhub-client-secret))
        CREDHUB_SERVER: ((credhub-api-server))
  on_failure:
    put: slack
    params: &slack-failure-params
      text: |
        :x: Failed to update test users
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel-customer-success))
      username: ((slack-username))
      icon_url: ((slack-icon-url))


- name: reconfigure
  serial: true
  plan:
  - get: src
    params: {depth: 1}
    trigger: true
  - set_pipeline: self
    file: src/ci/pipeline.yml
  on_failure:
    put: slack
    params:
      <<: *slack-failure-params
      text: |
        :x: Failed to reconfigure pipeline
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: test
  plan:
    - in_parallel:
      - get: src
        params: {depth: 1}
        trigger: true
        passed: [reconfigure]
      - get: general-task
    - task: test
      image: general-task
      config:
        inputs:
          - name: src
        platform: linux
        run:
          path: src/ci/test.sh
  on_failure:
    put: slack
    params:
      <<: *slack-failure-params
      text: |
        :x: Tests FAILED on opensearch-dashboards-cf-auth-proxy
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-test-apps
  plan:
    - in_parallel:
      - get: src
        params: {depth: 1}
        passed: [test]
      - get: general-task
      - get: dev-opensearch-image
        trigger: true
      - get: dev-opensearch-dashboards-image
        trigger: true

    - put: cf-dev
      params:
        manifest: src/cf/opensearch-node-manifest.yml
        docker_password: ((ecr_aws_secret))
        vars:
          opensearch_node_app_name: ((dev-test-opensearch-node-app-name))
          opensearch_password: ((opensearch-admin-password))
          repo: ((ecr_aws_repo))
          docker_username: ((ecr_aws_key))

    - put: cf-dev
      params:
        manifest: src/cf/opensearch-dashboards-manifest.yml
        docker_password: ((ecr_aws_secret))
        vars:
          dashboards_app_name: ((dev-test-opensearch-dashboards-app-name))
          opensearch_password: ((opensearch-admin-password))
          repo: ((ecr_aws_repo))
          docker_username: ((ecr_aws_key))

    - put: cf-dev
      params:
        path: src
        manifest: src/cf/proxy-manifest.yml
        vars:
          cf_url: ((dev-cf-api-url))
          uaa_auth_url: ((dev-uaa-auth-url))
          uaa_base_url: ((dev-uaa-base-url))
          uaa_client_id: ((dev-uaa-test-client-id))
          uaa_client_secret: ((dev-uaa-test-client-secret))
          # note: when setting this in credhub, be sure to include extra single quotes, e.g.
          # credhub set -t value -n /path/to/dev-uaa-jwks -v "'"'{"keys":[]}'"'"
          uaa_jwks: ((dev-uaa-jwks))
          secret_key: ((dev-secret-key))
          session_lifetime: "3600"
          public_route: ((dev-test-public-url))
          dashboard_url: ((dev-test-dashboard-url))
          auth_proxy_app_name: ((dev-test-auth-proxy-app-name))
          auth_proxy_num_instances: ((dev-test-auth-proxy-num-instances))
          redis_host: ((dev-redis-host))
          redis_password: ((dev-redis-password))

    - task: update-networking
      image: general-task
      config:
        platform: linux
        inputs:
        - name: src
        run:
          path: src/ci/update-networking.sh
      params: &dev-cf-auth-params
        CF_API_URL: ((dev-cf-api-url))
        CF_USERNAME: ((dev-cf-username))
        CF_PASSWORD: ((dev-cf-password))
        CF_ORGANIZATION: ((dev-cf-organization))
        CF_SPACE: ((dev-cf-space))
        OPENSEARCH_NODE_APP_NAME: ((dev-test-opensearch-node-app-name))
        DASHBOARDS_APP_NAME: ((dev-test-opensearch-dashboards-app-name))
        PROXY_APP_NAME: ((dev-test-auth-proxy-app-name))
  on_failure:
    put: slack
    params:
      <<: *slack-failure-params
      text: |
        :x: FAILED to deploy apps
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: e2e
  plan:
    - in_parallel:
      - get: src
        params: {depth: 1}
        trigger: true
        passed: [deploy-test-apps]
      - get: general-task
      - get: playwright-python
    - task: provision-cf-access
      image: general-task
      config:
        platform: linux
        inputs:
        - name: src
        run:
          path: src/ci/provision-cf-access.sh
      params:
        <<: *dev-cf-auth-params

        CF_ORG_1_NAME: ((dev-test-org-1-name))
        CF_ORG_2_NAME: ((dev-test-org-2-name))

        CF_ORG_1_SPACE_1_NAME: ((dev-test-org-1-space-1-name))
        CF_ORG_2_SPACE_2_NAME: ((dev-test-org-2-space-2-name))

        BOTH_ORGS_SPACE_NAME: ((dev-test-both-orgs-space-name))

        TEST_USER_1_USERNAME: ((dev-test-user-1-username))
        TEST_USER_1_PASSWORD: ((dev-test-user-1-password))
        TEST_USER_1_TOTP_SEED: ((dev-test-user-1-totp-seed))

        TEST_USER_2_USERNAME: ((dev-test-user-2-username))
        TEST_USER_2_PASSWORD: ((dev-test-user-2-password))
        TEST_USER_2_TOTP_SEED: ((dev-test-user-2-totp-seed))

        TEST_USER_3_USERNAME: ((dev-test-user-3-username))
        TEST_USER_3_PASSWORD: ((dev-test-user-3-password))
        TEST_USER_3_TOTP_SEED: ((dev-test-user-3-totp-seed))

        TEST_USER_4_USERNAME: ((dev-test-user-4-username))
        TEST_USER_4_PASSWORD: ((dev-test-user-4-password))
        TEST_USER_4_TOTP_SEED: ((dev-test-user-4-totp-seed))

    - task: initialize-config
      image: general-task
      config:
        platform: linux
        inputs:
        - name: src
        run:
          dir: src
          path: ci/init-config.sh
      params:
        <<: *dev-cf-auth-params

        OPENSEARCH_USER: ((opensearch-admin-username))
        OPENSEARCH_PASSWORD: ((opensearch-admin-password))

        CF_ORG_1_NAME: ((dev-test-org-1-name))
        CF_ORG_2_NAME: ((dev-test-org-2-name))

        CF_ORG_1_SPACE_1_NAME: ((dev-test-org-1-space-1-name))
        CF_ORG_2_SPACE_2_NAME: ((dev-test-org-2-space-2-name))

        BOTH_ORGS_SPACE_NAME: ((dev-test-both-orgs-space-name))

        DASHBOARDS_APP_NAME: ((dev-test-opensearch-dashboards-app-name))

    - task: e2e-tests
      image: playwright-python
      config:
        inputs:
          - name: src
        platform: linux
        run:
          path: src/ci/e2e.sh
        params:
          AUTH_PROXY_URL: ((auth-proxy-url))
          UAA_AUTH_URL: ((dev-uaa-auth-url))

          TEST_USER_1_USERNAME: ((dev-test-user-1-username))
          TEST_USER_1_PASSWORD: ((dev-test-user-1-password))
          TEST_USER_1_TOTP_SEED: ((dev-test-user-1-totp-seed))

          TEST_USER_2_USERNAME: ((dev-test-user-2-username))
          TEST_USER_2_PASSWORD: ((dev-test-user-2-password))
          TEST_USER_2_TOTP_SEED: ((dev-test-user-2-totp-seed))

          TEST_USER_3_USERNAME: ((dev-test-user-3-username))
          TEST_USER_3_PASSWORD: ((dev-test-user-3-password))
          TEST_USER_3_TOTP_SEED: ((dev-test-user-3-totp-seed))

          TEST_USER_4_USERNAME: ((dev-test-user-4-username))
          TEST_USER_4_PASSWORD: ((dev-test-user-4-password))
          TEST_USER_4_TOTP_SEED: ((dev-test-user-4-totp-seed))
  on_failure:
    put: slack
    params:
      <<: *slack-failure-params
      text: |
        :x: e2e tests FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>


##########################
#  RESOURCES

resources:

- name: src
  type: git
  icon: github-circle
  check_every: 10s
  source:
    uri: https://github.com/cloud-gov/opensearch-dashboards-cf-auth-proxy
    branch: main
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: dev-opensearch-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: opensearch-testing
    aws_region: us-gov-west-1
    tag: latest

- name: dev-opensearch-dashboards-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: opensearch-dashboards-testing
    aws_region: us-gov-west-1
    tag: latest

- name: cf-dev
  type: cf
  icon: cloud-upload
  source:
    api: ((dev-cf-api-url))
    username: ((dev-cf-username))
    password: ((dev-cf-password))
    organization: ((dev-cf-organization))
    space: ((dev-cf-space))

- name: general-task
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: general-task
    aws_region: us-gov-west-1
    tag: latest

- name: playwright-python
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: playwright-python
    aws_region: us-gov-west-1
    tag: latest

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: master-bosh-root-cert
  type: s3-iam
  source:
    bucket: ((production-bucket-name))
    region_name: ((aws-region))
    versioned_file: ((master-bosh-cert-file))

- name: weekly
  type: time
  source:
    start: 12:00 AM
    stop: 1:00 AM
    location: America/New_York
    days: [Wednesday]


############################
#  RESOURCE TYPES

resource_types:
- name: registry-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: registry-image-resource
    aws_region: us-gov-west-1
    tag: latest

- name: s3-iam
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: s3-resource
    aws_region: us-gov-west-1
    tag: latest

- name: git
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: git-resource
    aws_region: us-gov-west-1
    tag: latest

- name: cf
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: cf-resource
    aws_region: us-gov-west-1
    tag: latest

- name: slack-notification
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: slack-notification-resource
    aws_region: us-gov-west-1
    tag: latest
