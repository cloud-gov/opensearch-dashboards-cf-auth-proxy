jobs:

- name: reconfigure
  serial: true
  plan:
  - get: src
    params: {depth: 1}
    trigger: true
  - set_pipeline: self
    file: src/ci/pipeline.yml

- name: test
  plan:
    - in_parallel:
      - get: src
        params: {depth: 1}
        trigger: true
        passed: [reconfigure]
      - get: general-task
    - task: test
      image: general-task
      config:
        inputs:
          - name: src
        platform: linux
        run:
          path: src/ci/test.sh

- name: build-test-images
  plan:
    - get: src
      params: {depth: 1}
      trigger: true
      passed: [test]

    - put: dev-opensearch-image
      params:
        build: src/docker/opensearch
        dockerfile: src/docker/opensearch/dockerfile
        tag_as_latest: true
        cache: true

    - put: dev-opensearch-dashboards-image
      params:
        build: src/docker/opensearch_dashboards
        dockerfile: src/docker/opensearch_dashboards/dockerfile
        tag_as_latest: true
        cache: true

- name: deploy-test-apps
  plan:
    - in_parallel:
      - get: src
        params: {depth: 1}
        trigger: true
        passed: [build-test-images]
      - get: general-task
    
    - put: cf-dev
      params:
        manifest: src/cf/opensearch-manifest.yml
    
    - put: cf-dev
      params:
        manifest: src/cf/opensearch-dashboards-manifest.yml
    
    - put: cf-dev
      params:
        path: src
        manifest: src/cf/proxy-manifest.yml
        vars:
          cf_url: ((dev-cf-api-url))
          uaa_auth_url: ((dev-uaa-auth-url))
          uaa_base_url: ((dev-uaa-base-url))
          uaa_client_id: ((dev-uaa-client-id))
          uaa_client_secret: ((dev-uaa-client-secret))
          secret_key: ((dev-secret-key))
          session_lifetime: "3600"
          public_route: ((dev-test-public-url))
          dashboard_url: ((dev-test-dashboard-url))
          app_name: test-auth-proxy
          num_instances: 1

    - task: update-networking
      image: general-task
      config:
        platform: linux
        inputs:
        - name: src
        run:
          path: src/ci/update-networking.sh
      params: &dev-cf-auth-params
        CF_API_URL: ((dev-cf-api-url))
        CF_USERNAME: ((dev-cf-username))
        CF_PASSWORD: ((dev-cf-password))
        CF_ORGANIZATION: ((dev-cf-organization))
        CF_SPACE: ((dev-cf-space))

- name: e2e
  plan:
    - in_parallel:
      - get: src
        params: {depth: 1}
        trigger: true
        passed: [deploy-test-apps]
      - get: general-task
    - task: provision-cf-access
      image: general-task
      config:
        platform: linux
        inputs:
        - name: src
        run:
          path: src/ci/provision-cf-access.sh
      params:
        <<: *dev-cf-auth-params

        CF_ORG_ID_1: ((dev-test-org-1-id))
        CF_SPACE_ID_1: ((dev-test-org-1-space-1-id))

        CF_ORG_ID_2: ((dev-test-org-2-id))
        CF_SPACE_ID_2: ((dev-test-org-2-space-2-id))
        
        CF_ORG_ID_1_BOTH_ORGS_SPACE: ((dev-test-org-1-both-orgs-space-id))
        CF_ORG_ID_2_BOTH_ORGS_SPACE: ((dev-test-org-2-both-orgs-space-id))
        
        TEST_USER_1_USERNAME: ((dev-test-user-1-username))
        TEST_USER_1_PASSWORD: ((dev-test-user-1-password))
        TEST_USER_1_TOTP_SEED: ((dev-test-user-1-totp-seed))

        TEST_USER_2_USERNAME: ((dev-test-user-2-username))
        TEST_USER_2_PASSWORD: ((dev-test-user-2-password))
        TEST_USER_2_TOTP_SEED: ((dev-test-user-2-totp-seed))

        TEST_USER_3_USERNAME: ((dev-test-user-3-username))
        TEST_USER_3_PASSWORD: ((dev-test-user-3-password))
        TEST_USER_3_TOTP_SEED: ((dev-test-user-3-totp-seed))

        TEST_USER_4_USERNAME: ((dev-test-user-4-username))
        TEST_USER_4_PASSWORD: ((dev-test-user-4-password))
        TEST_USER_4_TOTP_SEED: ((dev-test-user-4-totp-seed))

    - task: initialize-config
      image: general-task
      config:
        platform: linux
        inputs:
        - name: src
        run:
          path: src/ci/init-config.sh
      params:
        <<: *dev-cf-auth-params

        ES_USER: ((es-admin-username))
        ES_PASSWORD: ((es-admin-password))

        CF_ORG_ID_1: ((dev-test-org-1-id))
        CF_SPACE_ID_1: ((dev-test-org-1-space-1-id))

        CF_ORG_ID_2: ((dev-test-org-2-id))
        CF_SPACE_ID_2: ((dev-test-org-2-space-2-id))
        
        CF_ORG_ID_1_BOTH_ORGS_SPACE: ((dev-test-org-1-both-orgs-space-id))
        CF_ORG_ID_2_BOTH_ORGS_SPACE: ((dev-test-org-2-both-orgs-space-id))
        
    - task: e2e-tests
      config:
        inputs:
          - name: src
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: mcr.microsoft.com/playwright
            tag: focal
        run:
          path: src/ci/e2e.sh
        params:
          AUTH_PROXY_URL: ((auth-proxy-url))
          TEST_USER_1_USERNAME: ((dev-test-user-1-username))
          TEST_USER_1_PASSWORD: ((dev-test-user-1-password))
          TEST_USER_1_TOTP_SEED: ((dev-test-user-1-totp-seed))
  
          TEST_USER_2_USERNAME: ((dev-test-user-2-username))
          TEST_USER_2_PASSWORD: ((dev-test-user-2-password))
          TEST_USER_2_TOTP_SEED: ((dev-test-user-2-totp-seed))

          TEST_USER_3_USERNAME: ((dev-test-user-3-username))
          TEST_USER_3_PASSWORD: ((dev-test-user-3-password))
          TEST_USER_3_TOTP_SEED: ((dev-test-user-3-totp-seed))
  
          TEST_USER_4_USERNAME: ((dev-test-user-4-username))
          TEST_USER_4_PASSWORD: ((dev-test-user-4-password))
          TEST_USER_4_TOTP_SEED: ((dev-test-user-4-totp-seed))

- name: deploy-dev
  plan:
    - get: src
      params: {depth: 1}
      trigger: true
      passed: [build-test-images]
      # passed: [e2e] uncomment once e2e tests are fixed
    
    - put: cf-dev
      params:
        path: src
        manifest: src/cf/proxy-manifest.yml
        vars:
          cf_url: ((dev-cf-api-url))
          uaa_auth_url: ((dev-uaa-auth-url))
          uaa_base_url: ((dev-uaa-base-url))
          uaa_client_id: ((dev-uaa-client-id))
          uaa_client_secret: ((dev-uaa-client-secret))
          secret_key: ((dev-secret-key))
          session_lifetime: "3600"
          public_route: ((dev-public-url))
          dashboard_url: ((dev-dashboard-url))
          app_name: auth-proxy
          num_instances: 1

##########################
#  RESOURCES

resources:

- name: src
  type: git
  icon: github-circle
  check_every: 10s
  source:
    uri: https://github.com/cloud-gov/opensearch-dashboards-cf-auth-proxy
    branch: main
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: dev-opensearch-image
  type: docker-image
  icon: docker
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: cloudgovoperations/test-opensearch

- name: dev-opensearch-dashboards-image
  type: docker-image
  icon: docker
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: cloudgovoperations/test-opensearch-dashboards

- name: cf-dev
  type: cf
  icon: cloud-upload
  source:
    api: ((dev-cf-api-url))
    username: ((dev-cf-username))
    password: ((dev-cf-password))
    organization: ((dev-cf-organization))
    space: ((dev-cf-space))

- name: general-task
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: general-task
    aws_region: us-gov-west-1
    tag: latest

############################
#  RESOURCE TYPES

resource_types:
- name: registry-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: registry-image-resource
    aws_region: us-gov-west-1
    tag: latest

- name: s3-iam
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: s3-resource
    aws_region: us-gov-west-1
    tag: latest
